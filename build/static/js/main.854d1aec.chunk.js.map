{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","topText","bottomText","randomImg","allMemeImg","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","preventDefault","randomNumber","Math","floor","random","this","length","randomMemeImage","url","target","name","value","className","onSubmit","type","placeholder","onChange","src","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAoEeA,E,kDAhEb,aAAgB,IAAD,8BACb,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,WAAY,IAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATT,E,qDAcf,WAAoB,IAAD,OACjBE,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAY,IACTE,EAASF,EAASG,KAAlBD,MACP,EAAKE,SAAS,CAAEV,WAAYQ,S,0BAIhC,SAAaG,GACXA,EAAMC,iBACN,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWC,KAAKrB,MAAMI,WAAWkB,QAChEC,EAAkBF,KAAKrB,MAAMI,WAAWa,GAAcO,IAC5DH,KAAKP,SAAS,CAAEX,UAAWoB,M,0BAK7B,SAAaR,GAAQ,IAAD,EACIA,EAAMU,OAArBC,EADW,EACXA,KAAMC,EADK,EACLA,MACbN,KAAKP,SAAL,eAAiBY,EAAQC,M,oBAK3B,WACE,OACE,sBAAKC,UAAU,gBAAf,UACE,iCACA,oBAAIA,UAAU,QAAd,gCAGA,uBAAMA,UAAU,OAAOC,SAAWR,KAAKd,aAAvC,UACE,uBAAOuB,KAAK,OAAOC,YAAY,WAAWL,KAAK,UAAUC,MAAON,KAAKrB,MAAMC,QAAS+B,SAAUX,KAAKhB,eACnG,uBAAOyB,KAAK,OAAOC,YAAY,cAAcL,KAAK,aAAaC,MAAON,KAAKrB,MAAME,WAAY8B,SAAUX,KAAKhB,eAC5G,sDAGF,sBAAKuB,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAQK,IAAKZ,KAAKrB,MAAMG,UAAW+B,IAAI,gBACtD,oBAAIN,UAAU,UAAd,SAAyBP,KAAKrB,MAAMC,UACpC,oBAAI2B,UAAU,aAAd,SAA4BP,KAAKrB,MAAME,uB,GAxD/BiC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.854d1aec.chunk.js","sourcesContent":["import './App.css' \nimport React, {Component} from \"react\"\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImg: []\n    }\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n\n    }\n\n    \n  componentDidMount(){\n    fetch(\"https://api.imgflip.com/get_memes\")\n    .then(response => response.json())\n    .then(response=> {\n      const {memes} = response.data\n      this.setState({ allMemeImg: memes })\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const randomNumber = Math.floor(Math.random() * this.state.allMemeImg.length)\n    const randomMemeImage = this.state.allMemeImg[randomNumber].url\n    this.setState({ randomImg: randomMemeImage })\n\n  }\n\n\n  handleChange(event) {\n    const {name, value} = event.target\n    this.setState({ [name] : value})\n    \n  }\n\n \n  render() {\n    return (\n      <div className=\"memeGenerator\">\n        <header>\n        <h1 className=\"title\"> Meme Generator </h1>\n        </header>\n        \n        <form className=\"form\" onSubmit= {this.handleSubmit}>\n          <input type=\"text\" placeholder=\"Top Text\" name=\"topText\" value={this.state.topText} onChange={this.handleChange}/>\n          <input type=\"text\" placeholder=\"Bottom Text\" name=\"bottomText\" value={this.state.bottomText} onChange={this.handleChange}/>\n          <button>Generate Meme</button>\n        </form>\n        \n        <div className=\"meme\">\n          <img className=\"image\" src={this.state.randomImg} alt=\"randomImage\" />\n          <h2 className=\"topText\">{this.state.topText}</h2>\n          <h2 className=\"bottomText\">{this.state.bottomText}</h2>\n        </div>\n        \n        \n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}